// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RumProject.API.Data;

#nullable disable

namespace RumProject.API.Migrations
{
    [DbContext(typeof(RumProjectDBContext))]
    partial class RumProjectDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RumProject.API.Models.Alcohol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlcoholDegree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlcoholImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DistilleryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProvenanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("YearOfBottling")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("YearOfDistillation")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DistilleryId");

                    b.HasIndex("ProvenanceId");

                    b.ToTable("Alcohols");
                });

            modelBuilder.Entity("RumProject.API.Models.Distillery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bottler")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistilleryImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Distilleries");
                });

            modelBuilder.Entity("RumProject.API.Models.Provenance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvenanceImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Provenances");
                });

            modelBuilder.Entity("RumProject.API.Models.Alcohol", b =>
                {
                    b.HasOne("RumProject.API.Models.Distillery", "Distillery")
                        .WithMany()
                        .HasForeignKey("DistilleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RumProject.API.Models.Provenance", "Provenance")
                        .WithMany()
                        .HasForeignKey("ProvenanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distillery");

                    b.Navigation("Provenance");
                });
#pragma warning restore 612, 618
        }
    }
}
